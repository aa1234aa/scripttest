<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SOC过低车辆-SOC过低车辆历史记录" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="VariableName" elementType="Argument">
            <stringProp name="Argument.name">VariableName</stringProp>
            <stringProp name="Argument.value">evsmc2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">.\lib\ext\evmsc2tools.jar</stringProp>
    </TestPlan>
    <hashTree>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="PreProcessor_InitData" enabled="true">
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">String window = &quot;E:\\AutoFiles\\PJ2.3Scripts&quot;;
String linux = &quot;/var/lib/jenkins/workspace/InterfaceAutomation2.3/PJ2.3Scripts&quot;;
String rootPath = PathUtils.getProjectRootPath(window, linux);
vars.put(&quot;PROJECT_PATH&quot;, rootPath);

Properties prop = InitProperties.init(rootPath + &quot;/Resources/Conf/basicdata.properties&quot;);

vars.put(&quot;SERVER_IP&quot;, prop.get(&quot;server_ip&quot;));
vars.put(&quot;SERVER_PORT&quot;, prop.get(&quot;server_port&quot;));
vars.put(&quot;CSRF&quot;, prop.get(&quot;csrf&quot;));
vars.put(&quot;R_SESS&quot;, prop.get(&quot;r_sess&quot;));
vars.put(&quot;fileDownload&quot;, prop.get(&quot;file_download&quot;));

vars.put(&quot;MYSQL_SERVER&quot;, prop.get(&quot;mysql_server&quot;));
vars.put(&quot;MYSQL_DB&quot;, prop.get(&quot;mysql_db&quot;));
vars.put(&quot;MYSQL_USERNAME&quot;, prop.get(&quot;mysql_username&quot;));
vars.put(&quot;MYSQL_PASSWORD&quot;, prop.get(&quot;mysql_password&quot;));</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookie 管理器" enabled="true">
        <collectionProp name="CookieManager.cookies">
          <elementProp name="CSRF" elementType="Cookie" testname="CSRF">
            <stringProp name="Cookie.value">${CSRF}</stringProp>
            <stringProp name="Cookie.domain">${SERVER_IP}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="R_SESS" elementType="Cookie" testname="R_SESS">
            <stringProp name="Cookie.value">${R_SESS}</stringProp>
            <stringProp name="Cookie.domain">${SERVER_IP}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="fileDownload" elementType="Cookie" testname="fileDownload">
            <stringProp name="Cookie.value">true</stringProp>
            <stringProp name="Cookie.domain">${SERVER_IP}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
        </collectionProp>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${SERVER_IP}</stringProp>
        <stringProp name="HTTPSampler.port">${SERVER_PORT}</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">99999999</stringProp>
        <stringProp name="minimumValue">10000000</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">Random</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="0.成功的默认查询" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0.SOC过低车辆-成功的默认查询" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${last_upload_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${last_upload_time},PT6H3M,,)}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="1.SOC过低车辆历史记录-成功的单条件查询" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="false">
          <stringProp name="dataSource">${VariableName}</stringProp>
          <stringProp name="query">SELECT
CONCAT(&apos;vin:&apos;,&apos;&quot;&apos;,veh.vin,&apos;&quot;&apos;), 
CONCAT(&apos;license_plate:&apos;,&apos;&quot;&apos;,veh.license_plate,&apos;&quot;&apos;), 
CONCAT(&apos;inter_no:&apos;,&apos;&quot;&apos;,veh.inter_no,&apos;&quot;&apos;), 
CONCAT(&apos;veh_model_id:&apos;,&apos;&quot;&apos;,veh.veh_model_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_unit_id:&apos;,&apos;&quot;&apos;,veh.oper_unit_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_area_id:&apos;,&apos;&quot;&apos;,veh.oper_area_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_license_city_id:&apos;,&apos;&quot;&apos;,veh.oper_license_city_id,&apos;&quot;&apos;), 
CONCAT(&apos;start_time:&apos;,&apos;&quot;&apos;,soc.start_time,&apos;&quot;&apos;), 
CONCAT(&apos;iccid:&apos;,&apos;&quot;&apos;,tm.iccid,&apos;&quot;&apos;)

FROM evsmc2.sys_vehicle as veh 
inner join   evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid 
inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id
where 
veh.vin is not null and 
veh.license_plate is not null and 
veh.inter_no is not null and 
veh.veh_model_id is not null and  
veh.oper_unit_id is not null and 
veh.oper_area_id is not null and 
veh.oper_license_city_id is not null and 
soc.start_time is not null and 
tm.iccid is not null and
soc.status=1 limit 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">soch</stringProp>
          <stringProp name="variableNames">SQLresults</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取vin" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vin</stringProp>
            <stringProp name="RegexExtractor.regex">vin:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车牌号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">licensePlate</stringProp>
            <stringProp name="RegexExtractor.regex">license_plate:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取内部编号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">interNo</stringProp>
            <stringProp name="RegexExtractor.regex">inter_no:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车辆型号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vehModelId</stringProp>
            <stringProp name="RegexExtractor.regex">veh_model_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营单位" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operUnitId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_unit_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营区域" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operAreaId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_area_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取上牌城市" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operLicenseCityId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_license_city_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="起止时间" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">start_time</stringProp>
            <stringProp name="RegexExtractor.regex">start_time:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取ICCID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">iccid</stringProp>
            <stringProp name="RegexExtractor.regex">iccid:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.sql.*;
import com.bitnei.util.*;

			
	String sql= &quot; SELECT veh.vin,veh.license_plate,veh.inter_no,veh.veh_model_id,veh.oper_unit_id,veh.oper_area_id,veh.oper_license_city_id,soc.start_time,tm.iccid FROM evsmc2.sys_vehicle as veh inner join evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id where veh.vin is not null and veh.license_plate is not null and veh.inter_no is not null and veh.veh_model_id is not null and  veh.oper_unit_id is not null and veh.oper_area_id is not null and veh.oper_license_city_id is not null and soc.start_time is not null and tm.iccid is not null and soc.status=1 limit 1 &quot;;
	
		Connection conn=null;
		Statement stmt=null;
		ResultSet rs = null ;	
		conn=DbUtil.getCon();  
	     stmt=conn.createStatement();
		rs = stmt.executeQuery(sql) ;
		System.out.println(sql);
		
		while(rs.next()){
			
			String pr1=rs.getString(&quot;vin&quot;);
			String pr2=rs.getString(&quot;license_plate&quot;);
			String pr3=rs.getString(&quot;inter_no&quot;);
			String pr4=rs.getString(&quot;veh_model_id&quot;);
			String pr5=rs.getString(&quot;oper_unit_id&quot;);
			String pr6=rs.getString(&quot;oper_area_id&quot;);
			String pr7=rs.getString(&quot;oper_license_city_id&quot;);
			String pr8=rs.getString(&quot;start_time&quot;);
			String pr9=rs.getString(&quot;iccid&quot;);
			
			vars.put(&quot;vin&quot;,pr1);
			vars.put(&quot;license_plate&quot;,pr2);
			vars.put(&quot;inter_no&quot;,pr3);
			vars.put(&quot;veh_model_id&quot;,pr4);
			vars.put(&quot;oper_unit_id&quot;,pr5);
			vars.put(&quot;oper_area_id&quot;,pr6);
			vars.put(&quot;oper_license_city_id&quot;,pr7);
			vars.put(&quot;start_time&quot;,pr8);
			vars.put(&quot;iccid&quot;,pr9);
		}	
			
	      DbUtil.closeCon(conn);

	
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.SOC过低车辆历史记录-成功的单条件查询（vin）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:&#xd;
[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
              <stringProp name="1147862297">${vin}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.SOC过低车辆历史记录-成功的单条件查询（提取车牌号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.3.SOC过低车辆历史记录-成功的单条件查询（提取内部编号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.4.SOC过低车辆历史记录-成功的单条件查询（提取车辆型号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.5.SOC过低车辆历史记录-成功的单条件查询（提取上牌城市）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.6.SOC过低车辆历史记录-成功的单条件查询（提取运营单位）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;operUnitId&quot;,&quot;value&quot;:&quot;${operUnitId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="2.SOC过低车辆历史记录-失败的单条件查询" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.sql.*;
import com.bitnei.util.*;

			
	String sql= &quot; SELECT veh.vin,veh.license_plate,veh.inter_no,veh.veh_model_id,veh.oper_unit_id,veh.oper_area_id,veh.oper_license_city_id,soc.start_time,tm.iccid FROM evsmc2.sys_vehicle as veh inner join evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id where veh.vin is not null and veh.license_plate is not null and veh.inter_no is not null and veh.veh_model_id is not null and  veh.oper_unit_id is not null and veh.oper_area_id is not null and veh.oper_license_city_id is not null and soc.start_time is not null and tm.iccid is not null and soc.status=1 limit 1 &quot;;
	
		Connection conn=null;
		Statement stmt=null;
		ResultSet rs = null ;	
		conn=DbUtil.getCon();  
	     stmt=conn.createStatement();
		rs = stmt.executeQuery(sql) ;
		System.out.println(sql);
		
		while(rs.next()){
			
			String pr1=rs.getString(&quot;vin&quot;);
			String pr2=rs.getString(&quot;license_plate&quot;);
			String pr3=rs.getString(&quot;inter_no&quot;);
			String pr4=rs.getString(&quot;veh_model_id&quot;);
			String pr5=rs.getString(&quot;oper_unit_id&quot;);
			String pr6=rs.getString(&quot;oper_area_id&quot;);
			String pr7=rs.getString(&quot;oper_license_city_id&quot;);
			String pr8=rs.getString(&quot;start_time&quot;);
			String pr9=rs.getString(&quot;iccid&quot;);
			
			vars.put(&quot;vin&quot;,pr1);
			vars.put(&quot;license_plate&quot;,pr2);
			vars.put(&quot;inter_no&quot;,pr3);
			vars.put(&quot;veh_model_id&quot;,pr4);
			vars.put(&quot;oper_unit_id&quot;,pr5);
			vars.put(&quot;oper_area_id&quot;,pr6);
			vars.put(&quot;oper_license_city_id&quot;,pr7);
			vars.put(&quot;start_time&quot;,pr8);
			vars.put(&quot;iccid&quot;,pr9);
		}	
			
	      DbUtil.closeCon(conn);

	
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+起始时间）" enabled="false">
          <stringProp name="dataSource">${VariableName}</stringProp>
          <stringProp name="query">SELECT
CONCAT(&apos;vin:&apos;,&apos;&quot;&apos;,veh.vin,&apos;&quot;&apos;), 
CONCAT(&apos;license_plate:&apos;,&apos;&quot;&apos;,veh.license_plate,&apos;&quot;&apos;), 
CONCAT(&apos;inter_no:&apos;,&apos;&quot;&apos;,veh.inter_no,&apos;&quot;&apos;), 
CONCAT(&apos;veh_model_id:&apos;,&apos;&quot;&apos;,veh.veh_model_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_unit_id:&apos;,&apos;&quot;&apos;,veh.oper_unit_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_area_id:&apos;,&apos;&quot;&apos;,veh.oper_area_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_license_city_id:&apos;,&apos;&quot;&apos;,veh.oper_license_city_id,&apos;&quot;&apos;), 
CONCAT(&apos;start_time:&apos;,&apos;&quot;&apos;,soc.start_time,&apos;&quot;&apos;), 
CONCAT(&apos;iccid:&apos;,&apos;&quot;&apos;,tm.iccid,&apos;&quot;&apos;)

FROM evsmc2.sys_vehicle as veh 
inner join   evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid 
inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id
where 
veh.vin is not null and 
veh.license_plate is not null and 
veh.inter_no is not null and 
veh.veh_model_id is not null and  
veh.oper_unit_id is not null and 
veh.oper_area_id is not null and 
veh.oper_license_city_id is not null and 
soc.start_time is not null and 
tm.iccid is not null and
soc.status=1 limit 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">soch</stringProp>
          <stringProp name="variableNames">SQLresults</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取vin" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vin</stringProp>
            <stringProp name="RegexExtractor.regex">vin:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车牌号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">licensePlate</stringProp>
            <stringProp name="RegexExtractor.regex">license_plate:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取内部编号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">interNo</stringProp>
            <stringProp name="RegexExtractor.regex">inter_no:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车辆型号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vehModelId</stringProp>
            <stringProp name="RegexExtractor.regex">veh_model_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营单位" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operUnitId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_unit_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营区域" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operAreaId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_area_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取上牌城市" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operLicenseCityId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_license_city_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="起止时间" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">start_time</stringProp>
            <stringProp name="RegexExtractor.regex">start_time:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取ICCID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">iccid</stringProp>
            <stringProp name="RegexExtractor.regex">iccid:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.1.SOC过低车辆历史记录-失败的单条件查询（vin）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}xx&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2.SOC过低车辆历史记录-失败的单条件查询（提取车牌号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3.SOC过低车辆历史记录-失败的单条件查询（提取内部编号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4.SOC过低车辆历史记录-失败的单条件查询（提取车辆型号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.5.SOC过低车辆历史记录-失败的单条件查询（提取上牌城市）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.6.SOC过低车辆历史记录-失败的单条件查询（提取运营单位）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;operUnitId&quot;,&quot;value&quot;:&quot;${operUnitId}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3.SOC过低车辆历史记录-成功的组合条件查询" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.sql.*;
import com.bitnei.util.*;

			
	String sql= &quot; SELECT veh.vin,veh.license_plate,veh.inter_no,veh.veh_model_id,veh.oper_unit_id,veh.oper_area_id,veh.oper_license_city_id,soc.start_time,tm.iccid FROM evsmc2.sys_vehicle as veh inner join evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id where veh.vin is not null and veh.license_plate is not null and veh.inter_no is not null and veh.veh_model_id is not null and  veh.oper_unit_id is not null and veh.oper_area_id is not null and veh.oper_license_city_id is not null and soc.start_time is not null and tm.iccid is not null and soc.status=1 limit 1 &quot;;
	
		Connection conn=null;
		Statement stmt=null;
		ResultSet rs = null ;	
		conn=DbUtil.getCon();  
	     stmt=conn.createStatement();
		rs = stmt.executeQuery(sql) ;
		System.out.println(sql);
		
		while(rs.next()){
			
			String pr1=rs.getString(&quot;vin&quot;);
			String pr2=rs.getString(&quot;license_plate&quot;);
			String pr3=rs.getString(&quot;inter_no&quot;);
			String pr4=rs.getString(&quot;veh_model_id&quot;);
			String pr5=rs.getString(&quot;oper_unit_id&quot;);
			String pr6=rs.getString(&quot;oper_area_id&quot;);
			String pr7=rs.getString(&quot;oper_license_city_id&quot;);
			String pr8=rs.getString(&quot;start_time&quot;);
			String pr9=rs.getString(&quot;iccid&quot;);
			
			vars.put(&quot;vin&quot;,pr1);
			vars.put(&quot;license_plate&quot;,pr2);
			vars.put(&quot;inter_no&quot;,pr3);
			vars.put(&quot;veh_model_id&quot;,pr4);
			vars.put(&quot;oper_unit_id&quot;,pr5);
			vars.put(&quot;oper_area_id&quot;,pr6);
			vars.put(&quot;oper_license_city_id&quot;,pr7);
			vars.put(&quot;start_time&quot;,pr8);
			vars.put(&quot;iccid&quot;,pr9);
		}	
			
	      DbUtil.closeCon(conn);

	
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="false">
          <stringProp name="dataSource">${VariableName}</stringProp>
          <stringProp name="query">SELECT
CONCAT(&apos;vin:&apos;,&apos;&quot;&apos;,veh.vin,&apos;&quot;&apos;), 
CONCAT(&apos;license_plate:&apos;,&apos;&quot;&apos;,veh.license_plate,&apos;&quot;&apos;), 
CONCAT(&apos;inter_no:&apos;,&apos;&quot;&apos;,veh.inter_no,&apos;&quot;&apos;), 
CONCAT(&apos;veh_model_id:&apos;,&apos;&quot;&apos;,veh.veh_model_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_unit_id:&apos;,&apos;&quot;&apos;,veh.oper_unit_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_area_id:&apos;,&apos;&quot;&apos;,veh.oper_area_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_license_city_id:&apos;,&apos;&quot;&apos;,veh.oper_license_city_id,&apos;&quot;&apos;), 
CONCAT(&apos;start_time:&apos;,&apos;&quot;&apos;,soc.start_time,&apos;&quot;&apos;), 
CONCAT(&apos;iccid:&apos;,&apos;&quot;&apos;,tm.iccid,&apos;&quot;&apos;)

FROM evsmc2.sys_vehicle as veh 
inner join   evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid 
inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id
where 
veh.vin is not null and 
veh.license_plate is not null and 
veh.inter_no is not null and 
veh.veh_model_id is not null and  
veh.oper_unit_id is not null and 
veh.oper_area_id is not null and 
veh.oper_license_city_id is not null and 
soc.start_time is not null and 
tm.iccid is not null and
soc.status=1 limit 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">soch</stringProp>
          <stringProp name="variableNames">SQLresults</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取vin" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vin</stringProp>
            <stringProp name="RegexExtractor.regex">vin:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车牌号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">licensePlate</stringProp>
            <stringProp name="RegexExtractor.regex">license_plate:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取内部编号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">interNo</stringProp>
            <stringProp name="RegexExtractor.regex">inter_no:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车辆型号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vehModelId</stringProp>
            <stringProp name="RegexExtractor.regex">veh_model_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营单位" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operUnitId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_unit_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营区域" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operAreaId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_area_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取上牌城市" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operLicenseCityId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_license_city_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="起止时间" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">start_time</stringProp>
            <stringProp name="RegexExtractor.regex">start_time:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取ICCID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">iccid</stringProp>
            <stringProp name="RegexExtractor.regex">iccid:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.SOC过低车辆历史记录-成功的组合条件查询（全部条件）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot; ${vin} &quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;iccid&quot;,&quot;value&quot;:&quot;${iccid}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}&quot;},{&quot;name&quot;:&quot;operUnitId&quot;,&quot;value&quot;:&quot;${operUnitId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.SOC过低车辆历史记录-成功的组合条件查询（vin+车牌号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin} &quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.3.SOC过低车辆历史记录-成功的组合条件查询（vin+车牌号+内部编号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.4.SOC过低车辆历史记录-成功的组合条件查询（vin+车牌号+内部编号+车辆型号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin} &quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.5.SOC过低车辆历史记录-成功的组合条件查询（vin+车牌号+内部编号+车辆型号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.6.SOC过低车辆历史记录-成功的组合条件查询（vin+车牌号+内部编号+车辆型号+上牌城市+运营单位）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}&quot;},{&quot;name&quot;:&quot;operUnitId&quot;,&quot;value&quot;:&quot;${operUnitId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="4.SOC过低车辆历史记录-失败的组合条件查询" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.sql.*;
import com.bitnei.util.*;

			
	String sql= &quot; SELECT veh.vin,veh.license_plate,veh.inter_no,veh.veh_model_id,veh.oper_unit_id,veh.oper_area_id,veh.oper_license_city_id,soc.start_time,tm.iccid FROM evsmc2.sys_vehicle as veh inner join evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id where veh.vin is not null and veh.license_plate is not null and veh.inter_no is not null and veh.veh_model_id is not null and  veh.oper_unit_id is not null and veh.oper_area_id is not null and veh.oper_license_city_id is not null and soc.start_time is not null and tm.iccid is not null and soc.status=1 limit 1 &quot;;
	
		Connection conn=null;
		Statement stmt=null;
		ResultSet rs = null ;	
		conn=DbUtil.getCon();  
	     stmt=conn.createStatement();
		rs = stmt.executeQuery(sql) ;
		System.out.println(sql);
		
		while(rs.next()){
			
			String pr1=rs.getString(&quot;vin&quot;);
			String pr2=rs.getString(&quot;license_plate&quot;);
			String pr3=rs.getString(&quot;inter_no&quot;);
			String pr4=rs.getString(&quot;veh_model_id&quot;);
			String pr5=rs.getString(&quot;oper_unit_id&quot;);
			String pr6=rs.getString(&quot;oper_area_id&quot;);
			String pr7=rs.getString(&quot;oper_license_city_id&quot;);
			String pr8=rs.getString(&quot;start_time&quot;);
			String pr9=rs.getString(&quot;iccid&quot;);
			
			vars.put(&quot;vin&quot;,pr1);
			vars.put(&quot;license_plate&quot;,pr2);
			vars.put(&quot;inter_no&quot;,pr3);
			vars.put(&quot;veh_model_id&quot;,pr4);
			vars.put(&quot;oper_unit_id&quot;,pr5);
			vars.put(&quot;oper_area_id&quot;,pr6);
			vars.put(&quot;oper_license_city_id&quot;,pr7);
			vars.put(&quot;start_time&quot;,pr8);
			vars.put(&quot;iccid&quot;,pr9);
		}	
			
	      DbUtil.closeCon(conn);

	
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="false">
          <stringProp name="dataSource">${VariableName}</stringProp>
          <stringProp name="query">SELECT
CONCAT(&apos;vin:&apos;,&apos;&quot;&apos;,veh.vin,&apos;&quot;&apos;), 
CONCAT(&apos;license_plate:&apos;,&apos;&quot;&apos;,veh.license_plate,&apos;&quot;&apos;), 
CONCAT(&apos;inter_no:&apos;,&apos;&quot;&apos;,veh.inter_no,&apos;&quot;&apos;), 
CONCAT(&apos;veh_model_id:&apos;,&apos;&quot;&apos;,veh.veh_model_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_unit_id:&apos;,&apos;&quot;&apos;,veh.oper_unit_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_area_id:&apos;,&apos;&quot;&apos;,veh.oper_area_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_license_city_id:&apos;,&apos;&quot;&apos;,veh.oper_license_city_id,&apos;&quot;&apos;), 
CONCAT(&apos;start_time:&apos;,&apos;&quot;&apos;,soc.start_time,&apos;&quot;&apos;), 
CONCAT(&apos;iccid:&apos;,&apos;&quot;&apos;,tm.iccid,&apos;&quot;&apos;)

FROM evsmc2.sys_vehicle as veh 
inner join   evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid 
inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id
where 
veh.vin is not null and 
veh.license_plate is not null and 
veh.inter_no is not null and 
veh.veh_model_id is not null and  
veh.oper_unit_id is not null and 
veh.oper_area_id is not null and 
veh.oper_license_city_id is not null and 
soc.start_time is not null and 
tm.iccid is not null and
soc.status=1 limit 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">soch</stringProp>
          <stringProp name="variableNames">SQLresults</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取vin" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vin</stringProp>
            <stringProp name="RegexExtractor.regex">vin:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车牌号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">licensePlate</stringProp>
            <stringProp name="RegexExtractor.regex">license_plate:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取内部编号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">interNo</stringProp>
            <stringProp name="RegexExtractor.regex">inter_no:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车辆型号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vehModelId</stringProp>
            <stringProp name="RegexExtractor.regex">veh_model_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营单位" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operUnitId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_unit_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营区域" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operAreaId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_area_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取上牌城市" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operLicenseCityId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_license_city_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="起止时间" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">start_time</stringProp>
            <stringProp name="RegexExtractor.regex">start_time:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取ICCID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">iccid</stringProp>
            <stringProp name="RegexExtractor.regex">iccid:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.1.SOC过低车辆历史记录-成功的组合条件查询（全部条件）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT1H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot; ${vin} &quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}&quot;},{&quot;name&quot;:&quot;operUnitId&quot;,&quot;value&quot;:&quot;${operUnitId}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1147862297">${vin}</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.2.SOC过低车辆历史记录-失败的组合条件查询（vin+车牌号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT1H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.3.SOC过低车辆历史记录-失败的组合条件查询（vin+车牌号+内部编号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT1H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.4.SOC过低车辆历史记录-失败的组合条件查询（vin+车牌号+内部编号+车辆型号）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT1H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin} &quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.5.SOC过低车辆历史记录-失败的组合条件查询（vin+车牌号+内部编号+车辆型号+上牌城市）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT1H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityIdXXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.6.SOC过低车辆历史记录-失败的组合条件查询（vin+车牌号+内部编号+车辆型号+上牌城市+运营单位）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT1H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;licensePlate&quot;,&quot;value&quot;:&quot;${licensePlate}&quot;},{&quot;name&quot;:&quot;vin&quot;,&quot;value&quot;:&quot;${vin}&quot;},{&quot;name&quot;:&quot;interNo&quot;,&quot;value&quot;:&quot;${interNo}&quot;},{&quot;name&quot;:&quot;vehModelId&quot;,&quot;value&quot;:&quot;${vehModelId}&quot;},{&quot;name&quot;:&quot;operLicenseCityId&quot;,&quot;value&quot;:&quot;${operLicenseCityId}&quot;},{&quot;name&quot;:&quot;operUnitId&quot;,&quot;value&quot;:&quot;${operUnitId}XXX&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
              <stringProp name="723337899">&quot;code&quot;:200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="5.SOC过低车辆历史记录-成功导出" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.sql.*;
import com.bitnei.util.*;

			
	String sql= &quot; SELECT veh.vin,veh.license_plate,veh.inter_no,veh.veh_model_id,veh.oper_unit_id,veh.oper_area_id,veh.oper_license_city_id,soc.start_time,tm.iccid FROM evsmc2.sys_vehicle as veh inner join evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id where veh.vin is not null and veh.license_plate is not null and veh.inter_no is not null and veh.veh_model_id is not null and  veh.oper_unit_id is not null and veh.oper_area_id is not null and veh.oper_license_city_id is not null and soc.start_time is not null and tm.iccid is not null and soc.status=1 limit 1 &quot;;
	
		Connection conn=null;
		Statement stmt=null;
		ResultSet rs = null ;	
		conn=DbUtil.getCon();  
	     stmt=conn.createStatement();
		rs = stmt.executeQuery(sql) ;
		System.out.println(sql);
		
		while(rs.next()){
			
			String pr1=rs.getString(&quot;vin&quot;);
			String pr2=rs.getString(&quot;license_plate&quot;);
			String pr3=rs.getString(&quot;inter_no&quot;);
			String pr4=rs.getString(&quot;veh_model_id&quot;);
			String pr5=rs.getString(&quot;oper_unit_id&quot;);
			String pr6=rs.getString(&quot;oper_area_id&quot;);
			String pr7=rs.getString(&quot;oper_license_city_id&quot;);
			String pr8=rs.getString(&quot;start_time&quot;);
			String pr9=rs.getString(&quot;iccid&quot;);
			
			vars.put(&quot;vin&quot;,pr1);
			vars.put(&quot;license_plate&quot;,pr2);
			vars.put(&quot;inter_no&quot;,pr3);
			vars.put(&quot;veh_model_id&quot;,pr4);
			vars.put(&quot;oper_unit_id&quot;,pr5);
			vars.put(&quot;oper_area_id&quot;,pr6);
			vars.put(&quot;oper_license_city_id&quot;,pr7);
			vars.put(&quot;start_time&quot;,pr8);
			vars.put(&quot;iccid&quot;,pr9);
		}	
			
	      DbUtil.closeCon(conn);

	
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="数据库查询（vin+车牌号+内部编号+ICCID+车辆型号+上牌城市+运营单位+运营区域+离线天数大于+起始时间）" enabled="false">
          <stringProp name="dataSource">${VariableName}</stringProp>
          <stringProp name="query">SELECT
CONCAT(&apos;vin:&apos;,&apos;&quot;&apos;,veh.vin,&apos;&quot;&apos;), 
CONCAT(&apos;license_plate:&apos;,&apos;&quot;&apos;,veh.license_plate,&apos;&quot;&apos;), 
CONCAT(&apos;inter_no:&apos;,&apos;&quot;&apos;,veh.inter_no,&apos;&quot;&apos;), 
CONCAT(&apos;veh_model_id:&apos;,&apos;&quot;&apos;,veh.veh_model_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_unit_id:&apos;,&apos;&quot;&apos;,veh.oper_unit_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_area_id:&apos;,&apos;&quot;&apos;,veh.oper_area_id,&apos;&quot;&apos;), 
CONCAT(&apos;oper_license_city_id:&apos;,&apos;&quot;&apos;,veh.oper_license_city_id,&apos;&quot;&apos;), 
CONCAT(&apos;start_time:&apos;,&apos;&quot;&apos;,soc.start_time,&apos;&quot;&apos;), 
CONCAT(&apos;iccid:&apos;,&apos;&quot;&apos;,tm.iccid,&apos;&quot;&apos;)

FROM evsmc2.sys_vehicle as veh 
inner join   evsmc2.sys_soc_vehicle_log_201906  as soc on soc.vid = veh.uuid 
inner join  evsmc2.sys_term_model_unit as tm on veh.term_id = tm.id
where 
veh.vin is not null and 
veh.license_plate is not null and 
veh.inter_no is not null and 
veh.veh_model_id is not null and  
veh.oper_unit_id is not null and 
veh.oper_area_id is not null and 
veh.oper_license_city_id is not null and 
soc.start_time is not null and 
tm.iccid is not null and
soc.status=1 limit 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">soch</stringProp>
          <stringProp name="variableNames">SQLresults</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取vin" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vin</stringProp>
            <stringProp name="RegexExtractor.regex">vin:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车牌号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">licensePlate</stringProp>
            <stringProp name="RegexExtractor.regex">license_plate:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取内部编号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">interNo</stringProp>
            <stringProp name="RegexExtractor.regex">inter_no:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取车辆型号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">vehModelId</stringProp>
            <stringProp name="RegexExtractor.regex">veh_model_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营单位" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operUnitId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_unit_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取运营区域" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operAreaId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_area_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取上牌城市" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">operLicenseCityId</stringProp>
            <stringProp name="RegexExtractor.regex">oper_license_city_id:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="起止时间" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">start_time</stringProp>
            <stringProp name="RegexExtractor.regex">start_time:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取ICCID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">iccid</stringProp>
            <stringProp name="RegexExtractor.regex">iccid:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.SOC过低车辆历史记录-成功导出" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs/export/${parameter}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import evmsc2.com.UrlCoder;
import evmsc2.com.DateTimeTool;
String beginTime = vars.get(&quot;start_time&quot;);
String vin = vars.get(&quot;vin&quot;);
String begin = new DateTimeTool().getSpecialDayAddOrBefore(beginTime,-5,0,1,1);
String end = new DateTimeTool().getSpecialDayAddOrBefore(beginTime,0,0,1,1);
log.info(begin);
log.info(end);
		String str = &quot;{\&quot;conditions\&quot;:[{\&quot;name\&quot;:\&quot;beginTime\&quot;,\&quot;value\&quot;:\&quot;&quot; + begin + &quot;\&quot;},&quot;
				+ &quot;{\&quot;name\&quot;:\&quot;endTime\&quot;,\&quot;value\&quot;:\&quot;&quot; + end + &quot;\&quot;},{\&quot;name\&quot;:\&quot;vin\&quot;,\&quot;value\&quot;:\&quot;&quot; + vin + &quot;\&quot;}],&quot;
				+ &quot;\&quot;sort\&quot;:[],\&quot;start\&quot;:0,\&quot;limit\&quot;:10}&quot;;
String url = new UrlCoder().urlEncoder(str);
log.info(url);
vars.put(&quot;parameter&quot;,url);
</stringProp>
            <stringProp name="scriptLanguage">beanshell</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">String filePath = vars.get(&quot;PROJECT_PATH&quot;) +  &quot;/Resources/download/SOC过低车辆历史记录导出前一月的数据.xls&quot;;
FileUtils.dataExport(prev.getResponseData(), filePath);
</stringProp>
            <stringProp name="scriptLanguage">beanshell</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2.SOC过低车辆历史记录-成功离线导出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;conditions&quot;:[{&quot;name&quot;:&quot;beginTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},-PT6H3M,,)}&quot;},{&quot;name&quot;:&quot;endTime&quot;,&quot;value&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,${start_time},PT6H3M,,)}&quot;}],&quot;sort&quot;:[],&quot;start&quot;:0,&quot;limit&quot;:10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/sys/socVehicleLogs/exportOffline</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-388218504">&quot;data&quot;:&quot;已经生成离线任务,请稍后在个人下载中心查看.&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
