<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.monitor.dao.ElectronicFenceMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.monitor.domain.ElectronicFence" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    efe.id  ,efe.group_code ,efe.name ,efe.create_by ,DATE_FORMAT(efe.create_time, '%Y-%m-%d %H:%i:%s') AS create_time ,efe.update_by ,DATE_FORMAT(efe.update_time, '%Y-%m-%d %H:%i:%s') AS update_time ,efe.rule_status ,efe.status_flag ,efe.rule_type ,efe.rule_use ,efe.period_type ,efe.response_mode ,efe.start_date ,efe.end_date ,efe.rule_week ,efe.start_time ,efe.end_time ,efe.chart_type ,efe.lonlat_range
    </sql>
    <sql id="moreColumns">
    efe.id  ,efe.group_code ,efe.name ,efe.create_by ,DATE_FORMAT(efe.create_time, '%Y-%m-%d %H:%i:%s') AS create_time ,efe.update_by ,DATE_FORMAT(efe.update_time, '%Y-%m-%d %H:%i:%s') AS update_time ,efe.rule_status ,efe.status_flag ,efe.rule_type ,efe.rule_use ,efe.period_type ,efe.response_mode ,efe.start_date ,efe.end_date ,efe.rule_week ,efe.start_time ,efe.end_time ,efe.chart_type ,efe.lonlat_range
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.monitor.domain.ElectronicFence"
            parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        monitor_electronic_fence efe
        <where>
            efe.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 增加 -->
    <insert id="insert" parameterType="com.bitnei.cloud.monitor.domain.ElectronicFence">
        insert into
        monitor_electronic_fence (id,group_code,name,create_by,create_time,update_by,update_time,rule_status,status_flag,rule_type,rule_use,period_type,response_mode,start_date,end_date,rule_week,start_time,end_time,chart_type,lonlat_range)
        values
        (#{id},#{groupCode},#{name},#{createBy},#{createTime},#{updateBy},#{updateTime},#{ruleStatus},#{statusFlag},#{ruleType},#{ruleUse},#{periodType},#{responseMode},#{startDate},#{endDate},#{ruleWeek},#{startTime},#{endTime},#{chartType},#{lonlatRange})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="com.bitnei.cloud.monitor.domain.ElectronicFence">
        update monitor_electronic_fence set
            id=id,
            group_code=#{groupCode},
            name=#{name},
            update_by=#{updateBy},
            update_time=#{updateTime},
            rule_status=#{ruleStatus},
            status_flag=#{statusFlag},
            rule_type=#{ruleType},
            rule_use=#{ruleUse},
            period_type=#{periodType},
            response_mode=#{responseMode},
            start_date=#{startDate},
            end_date=#{endDate},
            rule_week=#{ruleWeek},
            start_time=#{startTime},
            end_time=#{endTime},
            chart_type=#{chartType},
            lonlat_range=#{lonlatRange}
        WHERE id = #{id}
    </update>

    <!-- 删除 -->
    <delete id="delete" parameterType="java.util.HashMap">
        delete from
        monitor_electronic_fence
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 分页查询电子围栏 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap" resultOrdered="true">
        select
        <include refid="moreColumns"/>
        from
        monitor_electronic_fence efe
        <where>
             efe.status_flag = 1
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="name != null">
                AND efe.name LIKE '%${name}%'
            </if>
        </where>
        ORDER BY efe.update_time DESC, efe.create_time DESC
        /*动态获取排序字段*/
        <!--<foreach collection="sorts" item="item" index="index" separator=",">-->
            <!--<choose>-->
                <!--<when test="item.name == null || item.name == ''">-->
                    <!--efe.create_time DESC-->
                <!--</when>-->
                    <!--<otherwise>-->
                    <!--${item.name} ${item.order}-->
                <!--</otherwise>-->
            <!--</choose>-->
        <!--</foreach>-->
    </select>

    <!--查询电子围栏通过名称-->
    <select id="queryByName" parameterType="java.util.HashMap" resultType="com.bitnei.cloud.monitor.domain.ElectronicFence">
        select
        <include refid="moreColumns"/>
        from monitor_electronic_fence efe
        WHERE NAME = #{name} AND efe.status_flag='1'
    </select>

    <!--修改电子围栏状态为无效-->
    <update id="updateStatus" parameterType="com.bitnei.cloud.monitor.domain.ElectronicFence">
        update monitor_electronic_fence set status_flag=#{statusFlag}, update_by=#{updateBy}, update_time=#{updateTime} where id=#{id}
    </update>

    <!--修改关联表的围栏id根据原始的围栏id-->
    <update id="updateFenceIdByFenceVehLk" parameterType="java.util.HashMap">
        update monitor_fence_veh_lk set electronic_fence_id = #{newFenceId} where electronic_fence_id=#{oldFenceId} AND state='1'
    </update>

    <!--查询围栏绑定的车辆vid-->
    <select id="queryVidByFenceId" resultType="java.util.HashMap" parameterType="java.lang.String">
        SELECT vid FROM monitor_fence_veh_lk WHERE electronic_fence_id=#{fenceId} AND state='1'
    </select>

    <!--通过围栏id和车辆vid查询绑定关系-->
    <select id="queryLkByFenceIdAndVid" resultType="com.bitnei.cloud.monitor.domain.FenceVehLk" parameterType="com.bitnei.cloud.monitor.domain.FenceVehLk">
        SELECT
            id,
            electronic_fence_id AS electronicFenceId,
            vid,
            state,
            DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%s') AS createTime,
            DATE_FORMAT(update_time, '%Y-%m-%d %H:%i:%s') AS updateTime
        FROM
            monitor_fence_veh_lk
        WHERE
            electronic_fence_id = #{electronicFenceId}
            <if test="vid != null">
                AND vid = #{vid}
            </if>
    </select>

    <!--分页查询已关联电子围栏的车辆-->
    <select id="queryVehsLk" parameterType="java.util.HashMap" resultType="com.bitnei.cloud.sys.domain.Vehicle">
        SELECT
        sv.id,
        sv.uuid,
        sv.license_plate AS licensePlate,
        sv.vin,
        sv.inter_no AS interNo,
        sv.manu_unit_id AS manuUnitId,
        model.veh_model_name AS vehModelName,
        sv.stage,
        sv.oper_use_for AS operUseFor,
        oper.name AS operUnitName,
        vtype.name AS vehTypeName
        FROM
        sys_vehicle sv
        INNER JOIN monitor_fence_veh_lk lk ON (sv.uuid = lk.vid AND state='1')
        LEFT JOIN sys_veh_model model ON sv.veh_model_id = model.id
        LEFT JOIN sys_unit manu ON sv.manu_unit_id = manu.id
        LEFT JOIN sys_unit oper ON sv.oper_unit_id = oper.id
        LEFT JOIN sys_veh_notice nce ON model.notice_id = nce.id
        LEFT JOIN sys_veh_type vtype ON nce.veh_type_id = vtype.id
        <where>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            AND sv.is_delete='0'
            AND lk.electronic_fence_id = #{fenceId}
            /*车牌号*/
            <if test="licensePlate != null">
                AND sv.license_plate LIKE CONCAT('%', #{licensePlate}, '%')
            </if>
            /*VIN*/
            <if test="vin != null">
                AND sv.vin LIKE CONCAT('%', #{vin}, '%')
            </if>
            /*内部编号*/
            <if test="interNo != null">
                AND sv.inter_no LIKE CONCAT('%', #{interNo}, '%')
            </if>
            /*车辆阶段*/
            <if test="stage != null">
                AND sv.stage=#{stage}
            </if>
            /*车辆型号*/
            <if test="vehModelId != null">
                AND sv.veh_model_id = #{vehModelId}
            </if>
            /*车辆种类*/
            <if test="vehTypeId != null">
                AND vtype.id = #{vehTypeId}
            </if>
            /*车辆用途*/
            <if test="operUseFor != null">
                AND sv.oper_use_for = #{operUseFor}
            </if>
            /*运营单位*/
            <if test="operUnitId != null">
                AND sv.oper_unit_id = #{operUnitId}
            </if>
            /*车辆厂商/生产单位*/
            <if test="manuUnitId != null">
                AND sv.manu_unit_id = #{manuUnitId}
            </if>
        </where>
        order by sv.create_time desc
    </select>

    <!--分页查询未关联电子围栏的车辆-->
    <select id="queryVehsNotLk" parameterType="java.util.HashMap" resultType="com.bitnei.cloud.sys.domain.Vehicle">
        SELECT
        sv.id,
        sv.uuid,
        sv.license_plate AS licensePlate,
        sv.vin,
        sv.inter_no AS interNo,
        sv.manu_unit_id AS manuUnitId,
        model.veh_model_name AS vehModelName,
        sv.stage,
        sv.oper_use_for AS operUseFor,
        oper.name AS operUnitName,
        vtype.name AS vehTypeName
        FROM
        sys_vehicle sv
        LEFT JOIN sys_veh_model model ON sv.veh_model_id = model.id
        LEFT JOIN sys_unit manu ON sv.manu_unit_id = manu.id
        LEFT JOIN sys_unit oper ON sv.oper_unit_id = oper.id
        LEFT JOIN sys_veh_notice nce ON model.notice_id = nce.id
        LEFT JOIN sys_veh_type vtype ON nce.veh_type_id = vtype.id
        <where>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            AND sv.is_delete='0'
            AND sv.uuid NOT IN (SELECT vid FROM monitor_fence_veh_lk WHERE electronic_fence_id=#{fenceId} AND state='1')
            <if test="licensePlate != null">
                AND sv.license_plate LIKE CONCAT('%', #{licensePlate}, '%')
            </if>
            <if test="vin != null">
                AND sv.vin LIKE CONCAT('%', #{vin}, '%')
            </if>
            <if test="vehModelId != null">
                AND sv.veh_model_id = #{vehModelId}
            </if>
            <if test="vehTypeId != null">
                AND vtype.id = #{vehTypeId}
            </if>
            <if test="operUseFor != null">
                AND sv.oper_use_for = #{operUseFor}
            </if>
            <if test="interNo != null">
                AND sv.inter_no LIKE CONCAT('%', #{interNo}, '%')
            </if>
            <if test="operUnitId != null">
                AND sv.oper_unit_id = #{operUnitId}
            </if>
            <if test="manuUnitId != null">
                AND sv.manu_unit_id = #{manuUnitId}
            </if>
            <if test="importSearchValues != null and importSearchValues.size > 0">
                AND sv.vin IN
                <foreach collection="importSearchValues" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by sv.create_time desc
    </select>

    <!--添加电子围栏与车辆绑定关系-->
    <insert id="insertFenceVehLk" parameterType="com.bitnei.cloud.monitor.domain.FenceVehLk">
        INSERT monitor_fence_veh_lk (id,electronic_fence_id, vid, state, create_time, update_time) VALUES
        (#{id},#{electronicFenceId}, #{vid}, #{state}, #{createTime}, #{updateTime})
    </insert>

    <!--添加或更新电子围栏与车辆绑定关系-->
    <insert id="insertOrUpdateFenceVehLk" parameterType="com.bitnei.cloud.monitor.domain.FenceVehLk">
        INSERT monitor_fence_veh_lk (id,electronic_fence_id, vid, state, create_time, update_time) VALUES
        (#{id},#{electronicFenceId}, #{vid}, #{state}, #{createTime}, #{updateTime})
        ON DUPLICATE KEY UPDATE state = #{state}
    </insert>

    <!--批量添加或更新电子围栏与车辆绑定关系-->
    <insert id="insertOrUpdateFenceVehLkBatch" parameterType="java.util.HashMap">

        <foreach collection="list" item="item" separator=";">
            INSERT monitor_fence_veh_lk (id,electronic_fence_id, vid, state, create_time, update_time) VALUES
            (#{item.id},#{item.electronicFenceId}, #{item.vid}, #{item.state}, #{item.createTime}, #{item.updateTime})
            ON DUPLICATE KEY UPDATE state = #{item.state}
        </foreach>
    </insert>

    <!--删除电子围栏与车辆绑定关系-->
    <update id="deleteFenceVehLk" parameterType="java.util.HashMap">
        UPDATE monitor_fence_veh_lk SET state = 0, update_time = #{updateTime}
        <where>
            AND state='1'
            <if test="fenceId!=null and fenceId!=''">
                and electronic_fence_id =#{fenceId}
            </if>
            <if test="vehIdList != null and vehIdList.size != 0">
                and vid in (
                <foreach collection="vehIdList" item="vid" index="index" separator=",">
                    #{vid}
                </foreach>
                )
            </if>
        </where>
    </update>

    <!--修改围栏车辆绑定关系状态-->
    <update id="updateFenceVehLkByFenceId" parameterType="com.bitnei.cloud.monitor.domain.FenceVehLk">
        UPDATE monitor_fence_veh_lk SET state=#{state}, update_time=#{updateTime} WHERE electronic_fence_id =#{electronicFenceId}
    </update>

    <!--修改围栏车辆绑定关系状态-->
    <update id="updateFenceVehLkById" parameterType="com.bitnei.cloud.monitor.domain.FenceVehLk">
        UPDATE monitor_fence_veh_lk SET state=#{state}, update_time=#{updateTime} WHERE id=#{id}
    </update>

    <!--修改实时故障报警表中围栏名称和响应方式-->
    <update id="updateRealFenceAlarmNameAndResponseMode" parameterType="com.bitnei.cloud.monitor.domain.ElectronicFence">
        UPDATE fault_alarm_info SET rule_name=#{fenceName}, response_mode=#{responseMode} WHERE rule_id=#{fenceId} AND fault_type='3'
    </update>
</mapper>
