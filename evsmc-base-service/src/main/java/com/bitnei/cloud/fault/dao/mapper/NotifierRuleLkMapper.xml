<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.fault.dao.NotifierRuleLkMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.fault.domain.NotifierRuleLk" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
        fnrl.id ,fnrl.notifier_id ,fnrl.rule_id ,fnrl.rule_type ,fnrl.create_by ,fnrl.create_time
    </sql>
    <sql id="moreColumns">
        fnrl.id ,fnrl.notifier_id ,fnrl.rule_id ,fnrl.rule_type ,fnrl.create_by ,fnrl.create_time
    </sql>

    <!-- 增加 -->
    <insert id="insertBatch" parameterType="list">
        insert into
        fault_notifier_rule_lk (id,notifier_id,rule_id,rule_type,create_by,create_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.notifierId},#{item.ruleId},#{item.ruleType},#{item.createBy},#{item.createTime})
        </foreach>
    </insert>

    <!-- 删除 -->
    <delete id="delete">
        delete from
        fault_notifier_rule_lk
        <where>
            notifier_id = #{notifierId}
            <if test="ruleType != null">
                and rule_type = #{ruleType}
            </if>
        </where>
    </delete>

    <!-- 删除 -->
    <delete id="deleteByRuleId" parameterType="java.util.HashMap">
        delete from
        fault_notifier_rule_lk
        <where>
            rule_id = #{ruleId}
            <if test="ruleType != null">
                and rule_type = #{ruleType}
            </if>
        </where>
    </delete>

    <!-- 更新 -->
    <update id="updateRuleIdByOld" parameterType="java.util.HashMap">
        update fault_notifier_rule_lk set rule_id = #{newRuleId}
        <where>
            rule_id = #{oldRuleId}
            <if test="ruleType != null">
                and rule_type = #{ruleType}
            </if>
        </where>
    </update>

    <!-- 查询关联故障码规则 -->
    <select id="findParameterRuleList" resultMap="tailResults" parameterType="java.util.HashMap" resultOrdered="true">
        select
        <include refid="moreColumns"/>, fpr.name as ruleName
        from
        fault_notifier_rule_lk fnrl
        left join fault_parameter_rule fpr on fnrl.rule_id = fpr.id
        <where>
            fnrl.notifier_id = #{notifierId}
            and fnrl.rule_type = '1'
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 查询关联故障码规则 -->
    <select id="findCodeRuleList" resultMap="tailResults" parameterType="java.util.HashMap" resultOrdered="true">
        select
        <include refid="moreColumns"/>, fcr.fault_name as ruleName
        from
        fault_notifier_rule_lk fnrl
        left join fault_code_rule fcr on fnrl.rule_id = fcr.id
        <where>
            fnrl.notifier_id = #{notifierId}
            and fnrl.rule_type = '2'
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 查询关联围栏规则 -->
    <select id="findEnclosureRuleList" resultMap="tailResults" parameterType="java.util.HashMap" resultOrdered="true">
        select
        <include refid="moreColumns"/>, mef.name as ruleName
        from
        fault_notifier_rule_lk fnrl
        left join monitor_electronic_fence mef on fnrl.rule_id = mef.id
        <where>
            fnrl.notifier_id = #{notifierId}
            and fnrl.rule_type = '3'
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

</mapper>
