<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.veh.dao.DayreportAbnormalSituationMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.veh.domain.DayreportAbnormalSituation" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
            <result property="licensePlate" column="license_plate" />
            <result property="interNo" column="inter_no" />
            <result property="manuUnitId" column="manu_unit_id" />
            <result property="vehModelId" column="veh_model_id" />
            <result property="operLicenseCityId" column="oper_license_city_id" />
            <result property="operUnitId" column="oper_unit_id" />
            <result property="createTime" column="create_time" />
            <result property="sellDate" column="sell_date" />
            <result property="serialNumber" column="serial_number" />
            <result property="iccid" column="iccid" />
            <result property="termPartFirmwareNumber" column="term_part_firmware_number" />
            <result property="firstRegTime" column="first_reg_time" />
            <result property="lastCommitTime" column="last_commit_time" />
            <result property="speedNumber" column="speed_number" />
            <result property="mileageNumber" column="mileage_number" />
            <result property="lngLatNumber" column="lng_lat_number" />
            <result property="voltageNumber" column="voltage_number" />
            <result property="electricNumber" column="electric_number" />
            <result property="socNumber" column="soc_number" />
            <result property="noticeId" column="notice_id" />
            <result property="isDelete" column="is_delete" javaType="java.lang.Byte" />
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        <if test="authSQL != null and '' != authSQL">
            and ${authSQL}
        </if>
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    vdas.id  ,vdas.vid ,vdas.vin ,vdas.report_date ,vdas.type ,vdas.category ,vdas.abnormal_num
    </sql>
    <sql id="moreColumns">
    vdas.id  ,vdas.vid ,vdas.vin ,vdas.report_date ,vdas.type ,vdas.category ,vdas.abnormal_num
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.veh.domain.DayreportAbnormalSituation"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        veh_dayreport_abnormal_situation vdas
        <where>
            vdas.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>


    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        veh_dayreport_abnormal_situation (id,vid,vin,report_date,type,category,abnormal_num)
        values
        (#{id},#{vid},#{vin},#{reportDate},#{type},#{category},#{abnormalNum})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update veh_dayreport_abnormal_situation set
        id=id,vid=#{vid},vin=#{vin},report_date=#{reportDate},type=#{type},category=#{category},abnormal_num=#{abnormalNum}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete"  parameterType="java.util.HashMap">
        delete from
        veh_dayreport_abnormal_situation
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 异常车辆统计 -->
    <select id="pagerModel" resultMap="tailResults" resultOrdered="true">
        select
            sv.vin,
            sv.uuid as vid,
            sv.is_delete,
            sv.inter_no,
            sv.license_plate,
            sv.veh_model_id,
            sv.manu_unit_id,
            sv.oper_unit_id,
            sv.oper_license_city_id,
            sv.sell_date,
            sv.create_time,
            svm.notice_id,
            tmu.serial_number,
            tmu.iccid,
            tmu.term_part_firmware_number,
            svrs.first_reg_time,
            vds.last_commit_time,
            sum(if(vdas.type = 1, vdas.abnormal_num, 0)) as speed_number,
            sum(if(vdas.type = 2, vdas.abnormal_num, 0)) as mileage_number,
            sum(if(vdas.type = 3, vdas.abnormal_num, 0)) as lng_lat_number,
            ifnull(vter.abnormal_num, 0) as time_number,
            sum(if(vdas.type = 5, vdas.abnormal_num, 0)) as voltage_number,
            sum(if(vdas.type = 6, vdas.abnormal_num, 0)) as electric_number,
            sum(if(vdas.type = 7, vdas.abnormal_num, 0)) as soc_number
        from sys_vehicle as sv
            inner join veh_dayreport_abnormal_situation as vdas on vdas.vid = sv.uuid
            left join sys_veh_model as svm on svm.id = sv.veh_model_id
            left join sys_term_model_unit as tmu on tmu.id = sv.term_id
            left join sys_vehicle_real_status as svrs on svrs.vehicle_id = sv.id
            left join veh_dayreport_summary as vds on vds.vid = sv.uuid and date_format(vds.report_date, '%Y-%m-%d') = date_format(#{endDate}, '%Y-%m-%d')
            left join sys_area as sa on sa.id = sv.oper_license_city_id
            left join (
            select
            vter_temp.vid,
            count(vter_temp.id) as abnormal_num
            from veh_time_exception_record as vter_temp
            where
            <![CDATA[ UNIX_TIMESTAMP(vter_temp.server_time) >= UNIX_TIMESTAMP(date_format(#{startDate},'%Y-%m-%d'))
            and UNIX_TIMESTAMP(vter_temp.server_time) <= UNIX_TIMESTAMP(date_format(#{endDate},'%Y-%m-%d')) ]]>
            group by
            vter_temp.vid) as vter on vter.vid = sv.uuid
        <where>
            <include refid="authSQL"/>
                <![CDATA[
                and date_format(vdas.report_date, '%Y-%m-%d') >= date_format(#{startDate}, '%Y-%m-%d')
                and date_format(vdas.report_date, '%Y-%m-%d') <= date_format(#{endDate}, '%Y-%m-%d') ]]>
            <if test="licensePlate != null and licensePlate != ''">
                <bind name="pattern-license-plate" value="'%' + licensePlate + '%'" />
                and sv.license_plate like #{pattern-license-plate}
            </if>
            <if test="vin != null and vin != ''">
                <bind name="pattern-vin" value="'%' + vin + '%'" />
                and sv.vin like #{pattern-vin}
            </if>
            <if test="interNo != null and interNo != ''">
                <bind name="pattern-inter-no" value="'%' + interNo + '%'" />
                and sv.inter_no like #{pattern-inter-no}
            </if>
            <if test="vehModelId != null and vehModelId != ''">
                and sv.veh_model_id = #{vehModelId}
            </if>
            <if test="stage != null and stage != ''">
                and sv.stage = #{stage}
            </if>
            <if test="operUnitId != null and operUnitId != ''">
                and sv.oper_unit_id = #{operUnitId}
            </if>
            <if test="operLicenseCityId != null and operLicenseCityId != ''">
                <bind name="pattern-oper-license-city-id" value="'%' + operLicenseCityId + '%'" />
                and sa.path like #{pattern-oper-license-city-id}
            </if>
            <if test="importSearchValues != null and importSearchValues.size()>0">
                and sv.vin in
                <foreach collection="importSearchValues" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        group by
            sv.uuid
        order by
            vds.last_commit_time desc,
            convert(sv.license_plate using GBK) collate gbk_chinese_ci asc,
            sv.vin asc
    </select>

    <!-- 异常车辆统计计数 -->
    <select id="pagerModel_COUNT" resultType="long">
        select
            count(distinct sv.uuid)
        from sys_vehicle as sv
        inner join veh_dayreport_abnormal_situation as vdas on vdas.vid = sv.uuid
        left join sys_area as sa on sa.id = sv.oper_license_city_id
        <where>
            <include refid="authSQL"/>
            <if test="startDate != null and startDate != ''">
                <![CDATA[ and date_format(vdas.report_date, '%Y-%m-%d') >= date_format(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate != null and endDate != ''">
                <![CDATA[ and date_format(vdas.report_date, '%Y-%m-%d') <= date_format(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="licensePlate != null and licensePlate != ''">
                <bind name="pattern-license-plate" value="'%' + licensePlate + '%'" />
                and sv.license_plate like #{pattern-license-plate}
            </if>
            <if test="vin != null and vin != ''">
                <bind name="pattern-vin" value="'%' + vin + '%'" />
                and sv.vin like #{pattern-vin}
            </if>
            <if test="interNo != null and interNo != ''">
                <bind name="pattern-inter-no" value="'%' + interNo + '%'" />
                and sv.inter_no like #{pattern-inter-no}
            </if>
            <if test="vehModelId != null and vehModelId != ''">
                and sv.veh_model_id = #{vehModelId}
            </if>
            <if test="stage != null and stage != ''">
                and sv.stage = #{stage}
            </if>
            <if test="operUnitId != null and operUnitId != ''">
                and sv.oper_unit_id = #{operUnitId}
            </if>
            <if test="operLicenseCityId != null and operLicenseCityId != ''">
                <bind name="pattern-oper-license-city-id" value="'%' + operLicenseCityId + '%'" />
                and sa.path like #{pattern-oper-license-city-id}
            </if>
            <if test="importSearchValues != null and importSearchValues.size()>0">
                and sv.vin in
                <foreach collection="importSearchValues" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 时间异常车辆详情 显示位置和时间 -->
    <select id="pagerModel3" resultType="com.bitnei.cloud.veh.model.AbnormalRecordModel"  parameterType="java.util.HashMap">

        select
        date_format(vter.server_time,'%Y-%m-%d %H:%i:%s') as report_date, vter.lng_lat
        from veh_time_exception_record vter
        inner join sys_vehicle sv on sv.uuid = vter.vid
        left join sys_vehicle_real_status svrs on svrs.vehicle_id = sv.id
        <where>
            vter.vin = #{vin}
            <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                and <![CDATA[ UNIX_TIMESTAMP(vter.server_time) >= UNIX_TIMESTAMP(date_format(#{startDate},'%Y-%m-%d %H:%i:%s')) ]]>
                and <![CDATA[ UNIX_TIMESTAMP(vter.server_time) <= UNIX_TIMESTAMP(date_format(#{endDate},'%Y-%m-%d %H:%i:%s')) ]]>
            </if>
        </where>

    </select>
</mapper>
