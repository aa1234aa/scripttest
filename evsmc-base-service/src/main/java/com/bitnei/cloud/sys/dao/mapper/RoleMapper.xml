<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.sys.dao.RoleMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.sys.domain.Role" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <resultMap id="ModuleDataItemResults" type="com.bitnei.cloud.sys.domain.ModuleDataItem" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <resultMap id="RoleDataItemLkResults" type="com.bitnei.cloud.sys.domain.RoleDataItemLk" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <resultMap id="userResults" type="com.bitnei.cloud.sys.domain.User" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
         role.*
    </sql>
    <sql id="moreColumns">
         role.*
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.sys.domain.Role"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        ,group_concat(distinct rlk.user_id) AS userIds
        from
        sys_role role
        LEFT JOIN sys_user_role_lk rlk ON role.id = rlk.role_id
        <where>
            role.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        group by role.id
    </select>

     <!-- 根据角色名称查询 -->
    <select id="findByName" resultType="com.bitnei.cloud.sys.domain.Role"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        ,group_concat(distinct rlk.user_id) AS userIds
        from
        sys_role role
        LEFT JOIN sys_user_role_lk rlk ON role.id = rlk.role_id
        <where>
            role.name=#{name}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        group by role.id
    </select>

    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        sys_role (id,name,is_valid,is_admin,index_url,note,create_time,create_by)
        values
        (#{id},#{name},#{isValid},#{isAdmin},#{indexUrl},#{note},#{createTime},#{createBy})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update sys_role set
        id=id,name=#{name},is_valid=#{isValid},is_admin=#{isAdmin},index_url=#{indexUrl},note=#{note},update_time=#{updateTime},update_by=#{updateBy}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete"  parameterType="java.util.HashMap">
        delete from
        sys_role
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        ,group_concat(distinct rlk.user_id) AS userIds
        from
        sys_role role
        LEFT JOIN sys_user_role_lk rlk ON role.id = rlk.role_id
        <where>
        <if test="authSQL != null">
        <include refid="authSQL"/>
        </if>
        <if test="name != null">
            and role.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="isValid != null">
            and role.is_valid = #{isValid}
        </if>
        </where>
        group by role.id
        ORDER BY role.create_time DESC
    </select>

    <!-- 查询角色已经分配的账号 -->
    <select id="queryAssociatedAccount" resultMap="userResults" parameterType="java.util.HashMap">
        SELECT a.* FROM sys_user a,sys_user_role_lk b,sys_owner_people c
        where a.id=b.user_id and a.owner_id=c.id and b.role_id=#{roleId}
        <if test="loginName != null and loginName != ''">
            and a.username LIKE CONCAT('%',#{loginName},'%')
        </if>
        <if test="trueName != null and trueName != ''">
            and c.owner_name LIKE CONCAT('%',#{trueName},'%')
        </if>
        <if test="mobile != null and mobile != ''">
            and c.tel_phone LIKE CONCAT('%',#{mobile},'%')
        </if>
    </select>

    <!-- 查询角色未分配的账号 -->
    <select id="queryUnassociatedAccount" resultMap="userResults" parameterType="java.util.HashMap">
        SELECT a.* FROM sys_user a,sys_owner_people c
        where a.id not in (select user_id from sys_user_role_lk where role_id=#{roleId})
        and a.owner_id=c.id
        <if test="loginName != null and loginName != ''">
            and a.username LIKE CONCAT('%',#{loginName},'%')
        </if>
        <if test="trueName != null and trueName != ''">
            and c.owner_name LIKE CONCAT('%',#{trueName},'%')
        </if>
        <if test="mobile != null and mobile != ''">
            and c.tel_phone LIKE CONCAT('%',#{mobile},'%')
        </if>
    </select>

    <!-- 分配角色账号 -->
    <insert id="bindAccount" parameterType="java.util.HashMap">
        insert into
        sys_user_role_lk (id,user_id,role_id)
        values
        (#{id},#{userId},#{roleId})
    </insert>

    <!-- 查询角色账号是否绑定 -->
    <select id="queryRoleAccountBinding" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT count(id) FROM sys_user_role_lk
        where role_id =#{roleId} and user_id=#{userId}
    </select>

    <!-- 删除 -->
    <delete id="unbindAccount"  parameterType="java.util.HashMap">
        delete from
        sys_user_role_lk
        where
        role_id=#{roleId}
    </delete>


    <!-- 查询账号已经分配的角色 -->
    <select id="queryAssociatedRole" resultMap="tailResults" parameterType="java.util.HashMap">
        SELECT a.* FROM sys_role a,sys_user_role_lk b
        where a.id=b.role_id and b.user_id=#{userId}
        <if test="roleName != null and roleName != ''">
            and a.name LIKE CONCAT('%',#{roleName},'%')
        </if>
    </select>

    <!-- 查询账号未分配的角色 -->
    <select id="queryUnassociatedRole" resultMap="tailResults" parameterType="java.util.HashMap">
        SELECT a.* FROM sys_role a,sys_user_role_lk b
        where a.id not in (select user_id from sys_user_role_lk where user_id=#{userId})
        <if test="roleName != null and roleName != ''">
            and a.name LIKE CONCAT('%',#{roleName},'%')
        </if>
    </select>

    <!--统计角色关联用户数量-->
    <select id="statRoleUserCount" resultType="java.lang.Integer"  parameterType="java.util.HashMap">
        SELECT count(distinct user_id) FROM sys_user_role_lk lk inner join sys_user u on u.id=lk.user_id
        where role_id = #{roleId}
    </select>

    <!-- 查询模块列数据项(全部可配置脱敏隐藏属性的字段) -->
    <select id="queryModuleDataItem" resultMap="ModuleDataItemResults" parameterType="java.util.HashMap">
        SELECT b.id as module_data_id,a.* FROM sys_module_data_item a,sys_module_data_lk b
        where a.id = b.module_data_id and b.module_id=#{moduleId} order by b.id
    </select>

    <!-- 查询角色模块列数据项(已经配置的脱敏隐藏属性) -->
    <select id="queryRoleModuleDataItem" resultMap="RoleDataItemLkResults" parameterType="java.util.HashMap">
        SELECT a.* FROM sys_role_data_item_lk a,sys_role_module_lk b
        where a.role_module_id = b.id
        and b.role_id=#{roleId} and b.module_id=#{moduleId} order by a.module_data_id
    </select>

    <!-- 查询role_module_id -->
    <select id="queryRoleModuleId" resultType="java.lang.String" parameterType="java.util.HashMap">
        SELECT id FROM sys_role_module_lk
        where role_id =#{roleId} and module_id=#{moduleId}
    </select>

    <update id="updateSysRoleDataItemLk" parameterType="java.util.HashMap">
        update sys_role_data_item_lk set
        is_hidden=#{isHidden},
        is_sensitive=#{isSensitive},
        update_time=#{updateTime}
        ,update_by=#{updateBy}
        where
        role_module_id=#{roleModuleId} and module_data_id=#{moduleDataId}
    </update>

    <insert id="insertSysRoleDataItemLk" parameterType="java.util.HashMap">
        insert into
        sys_role_data_item_lk (id,role_module_id,module_data_id,is_hidden,is_sensitive,create_time,create_by)
        values
        (#{id},#{roleModuleId},#{moduleDataId},#{isHidden},#{isSensitive},#{createTime},#{createBy})
    </insert>
</mapper>
