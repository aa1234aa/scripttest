<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.sys.dao.RemoteDiagnoseMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.sys.domain.RemoteDiagnose" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    rd.id  ,rd.vin ,rd.license_plate ,rd.veh_model_name ,rd.diagnostic_mode ,rd.diagnositic_time ,rd.result_state ,rd.create_by ,rd.create_time ,rd.create_by_id
    </sql>
    <sql id="moreColumns">
    rd.id  ,rd.vin ,rd.license_plate ,rd.veh_model_name ,rd.diagnostic_mode ,rd.diagnositic_time ,rd.result_state ,rd.create_by ,rd.create_time ,rd.create_by_id
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.sys.domain.RemoteDiagnose" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>, v.inter_no as interNo, rdd.id as detailId
        from
        sys_remote_diagnose rd
        left join sys_vehicle v on rd.vin = v.vin
        left join sys_remote_diagnose_detail rdd on rdd.diagnose_id = rd.id
        <where>
            rd.id=#{id} and v.is_delete = 0
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>


    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        sys_remote_diagnose (id,vin,license_plate,veh_model_name,diagnostic_mode,diagnositic_time,result_state,create_by,create_time,create_by_id)
        values
        (#{id},#{vin},#{licensePlate},#{vehModelName},#{diagnosticMode},#{diagnositicTime},#{resultState},#{createBy},#{createTime},#{createById})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update sys_remote_diagnose set
        id=id,vin=#{vin},license_plate=#{licensePlate},veh_model_name=#{vehModelName},diagnostic_mode=#{diagnosticMode},diagnositic_time=#{diagnositicTime},result_state=#{resultState},create_by_id=#{createById}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete" parameterType="java.util.HashMap">
        delete from
        sys_remote_diagnose
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>, v.inter_no as interNo, rdd.id as detailId
        from
        sys_remote_diagnose rd
        left join sys_vehicle v on rd.vin = v.vin
        left join sys_remote_diagnose_detail rdd on rdd.diagnose_id = rd.id
        <where>
            v.is_delete = 0
            <if test="vin != null and vin != ''">
                and rd.vin like concat('%',#{vin},'%')
            </if>
            <if test="licensePlate != null and licensePlate != ''">
                and rd.license_plate like concat('%',#{licensePlate},'%')
            </if>
            <if test="beginTime != null">
                and rd.diagnositic_time <![CDATA[ >= ]]> #{beginTime}
            </if>
            <if test="endTime != null">
                and rd.diagnositic_time <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        order by rd.diagnositic_time desc
    </select>
</mapper>
