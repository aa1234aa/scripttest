<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.fault.dao.CodeRuleMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.fault.domain.CodeRule" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    fcr.id  ,fcr.fault_code_type_id ,fcr.fault_name ,fcr.analyze_type ,fcr.veh_model_id ,fcr.normal_code ,fcr.begin_threshold ,fcr.end_threshold ,fcr.enabled_status , fcr.start_point, fcr.exception_code_length, fcr.fault_describe ,fcr.solution_describe ,fcr.delete_status ,fcr.create_time ,fcr.create_by ,fcr.update_time ,fcr.update_by, fcr.subordinate_parts_id, fcr.begin_count_threshold, fcr.end_count_threshold, fcr.enable_time_threshold, fcr.enable_count_threshold
    </sql>
    <sql id="moreColumns">
    fcr.id  ,fcr.fault_code_type_id ,fcr.fault_name ,fcr.analyze_type ,fcr.veh_model_id ,fcr.normal_code ,fcr.begin_threshold ,fcr.end_threshold ,fcr.enabled_status , fcr.start_point, fcr.exception_code_length, fcr.fault_describe ,fcr.solution_describe ,fcr.delete_status ,fcr.create_time ,fcr.create_by ,fcr.update_time ,fcr.update_by, fcr.subordinate_parts_id, fcr.begin_count_threshold, fcr.end_count_threshold, fcr.enable_time_threshold, fcr.enable_count_threshold
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.fault.domain.CodeRule"  parameterType="java.lang.String">
        select
        <include refid="moreColumns"/>
        from
        fault_code_rule fcr
        where
            fcr.id=#{id}
    </select>

    <!-- 增加 -->
    <insert id="insert" parameterType="com.bitnei.cloud.fault.domain.CodeRule">
        insert into
        fault_code_rule (id,fault_code_type_id,fault_name,analyze_type,veh_model_id,normal_code,begin_threshold,end_threshold,enabled_status,start_point, exception_code_length, fault_describe,solution_describe, delete_status, create_time,create_by,subordinate_parts_id,begin_count_threshold,end_count_threshold,enable_time_threshold,enable_count_threshold)
        values
        (#{id},#{faultCodeTypeId},#{faultName},#{analyzeType},#{vehModelId},upper(#{normalCode}),#{beginThreshold},#{endThreshold},#{enabledStatus}, #{startPoint}, #{exceptionCodeLength}, #{faultDescribe},#{solutionDescribe}, 0, #{createTime},#{createBy}, #{subordinatePartsId}, #{beginCountThreshold}, #{endCountThreshold}, #{enableTimeThreshold}, #{enableCountThreshold})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="com.bitnei.cloud.fault.domain.CodeRule">
        update fault_code_rule set
        fault_code_type_id=#{faultCodeTypeId},fault_name=#{faultName},analyze_type=#{analyzeType},veh_model_id=#{vehModelId},normal_code=upper(#{normalCode}),begin_threshold=#{beginThreshold},end_threshold=#{endThreshold},enabled_status=#{enabledStatus}, start_point=#{startPoint}, exception_code_length=#{exceptionCodeLength}, fault_describe=#{faultDescribe},solution_describe=#{solutionDescribe},update_time=#{updateTime},update_by=#{updateBy},subordinate_parts_id=#{subordinatePartsId},begin_count_threshold=#{beginCountThreshold},end_count_threshold=#{endCountThreshold},enable_time_threshold=#{enableTimeThreshold},enable_count_threshold=#{enableCountThreshold}
        where
            id = #{id}
    </update>

    <!-- 删除 -->
    <update id="delete"  parameterType="java.lang.String">
        update fault_code_rule set delete_status = 1
        where
            id = #{id}
    </update>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        fault_code_rule fcr
        <where>
            fcr.delete_status = 0
            <if test="faultCodeTypeId != null and faultCodeTypeId !=''">
                and fcr.fault_code_type_id = #{faultCodeTypeId}
            </if>
            <if test="faultName != null and faultName !=''">
                and fcr.fault_name like "%"#{faultName}"%"
            </if>
            <if test="vehModelId != null and vehModelId !=''">
                and fcr.veh_model_id like "%"#{vehModelId}"%"
            </if>
        </where>
        order by fcr.create_time desc
    </select>

    <!-- 导出查询 -->
    <select id="codeRuleExportList" resultType="com.bitnei.cloud.fault.domain.CodeRuleExport">
        select  fcr.fault_name faultName, fcr.analyze_type analyzeType, tp.`name` faultTypeName, fcr.veh_model_id vehModelId, fcr.fault_describe faultDescribe,
        fcr.solution_describe solutionDescribe, fcr.start_point startPoint, exception_code_length exceptionCodeLength, fcr.normal_code normalCode,
        it.exception_code exceptionCode, fcr.begin_threshold, fcr.end_threshold, fcr.subordinate_parts_id, it.alarm_level alarmLevel,
        it.produce_alarm produceAlarm, it.response_mode responseMode,fcr.begin_count_threshold,fcr.end_count_threshold,
        fcr.enable_time_threshold, fcr.enable_count_threshold, fcr.enabled_status
        from fault_code_rule_item it
        inner join fault_code_rule fcr on it.fault_code_rule_id = fcr.id
        inner join fault_code_type tp  on fcr.fault_code_type_id = tp.id
        <where>
            it.delete_status = 0
            and fcr.delete_status = 0
            <if test="faultCodeTypeId != null and faultCodeTypeId !=''">
                and fcr.fault_code_type_id = #{faultCodeTypeId}
            </if>
            <if test="faultName != null and faultName !=''">
                and fcr.fault_name like "%"#{faultName}"%"
            </if>
            <if test="vehModelId != null and vehModelId !=''">
                and fcr.veh_model_id = #{vehModelId}
            </if>
        </where>
    </select>

    <!-- 统计数量 -->
    <select id="count" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(*) from fault_code_rule fcr
        <where>
            fcr.delete_status = 0
            <if test="faultCodeTypeId != null and faultCodeTypeId != ''">
                and fcr.fault_code_type_id = #{faultCodeTypeId}
            </if>
            <if test="faultName != null and faultName != ''">
                and fcr.fault_name = #{faultName}
            </if>
            <if test="skipId != null and skipId != ''">
                and fcr.id != #{skipId}
            </if>
        </where>
    </select>

    <!-- 根据故障种类查询 -->
    <select id="findByTypeId" parameterType="java.lang.String" resultMap="tailResults">
        select
            <include refid="moreColumns"/>
        from
            fault_code_rule fcr
        where
            delete_status = 0
            and fault_code_type_id = #{faultCodeTypeId}
    </select>

    <!-- 根据故障名称查询 -->
    <select id="findByName" parameterType="java.lang.String" resultMap="tailResults">
        select
            <include refid="moreColumns"/>
        from
            fault_code_rule fcr
        where
            delete_status = 0
            and fault_name = #{faultName}
    </select>

    <!-- 根据车型id删除 -->
    <delete id="deleteByVehModelId">
        update  fault_code_rule set delete_status = 1, update_time=#{updateTime}, update_by=#{updateBy}
        where delete_status = 0 and veh_model_id=#{vehModelId}
    </delete>

    <delete id="updateVehModelId">
        update  fault_code_rule set veh_model_id=#{vehModelId}, update_time=#{updateTime}, update_by=#{updateBy}
        where id = #{id}
    </delete>

</mapper>
