<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.dc.dao.DataItemMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.dc.domain.DataItem" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
            <result property="parentId" column="parent_id"/>
            <result property="isItem" column="isItem"/>
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        <if test="authSQL != null and '' != authSQL">
            and ${authSQL}
        </if>
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    di.id  ,di.name ,di.seq_no ,di.item_group_id ,di.item_type ,di.byte_start_pos ,di.bit_start_pos ,di.length ,di.high_low_flg ,di.factor ,di.offset ,di.unit ,di.dot ,di.order_num ,di.note ,di.upper_limit ,di.lower_limit ,di.data_type ,di.isnum ,di.is_show ,di.is_monitor ,di.is_array ,di.enable_parse_rule ,di.is_custom ,di.is_valid ,di.create_time ,di.create_by ,di.update_time ,di.update_by, di.rule_type_id
    </sql>
    <sql id="moreColumns">
    di.id  ,di.name ,di.seq_no ,di.item_group_id ,di.item_type ,di.byte_start_pos ,di.bit_start_pos ,di.length ,di.high_low_flg ,di.factor ,di.offset ,di.unit ,di.dot ,di.order_num ,di.note ,di.upper_limit ,di.lower_limit ,di.data_type ,di.isnum ,di.is_show ,di.is_monitor ,di.is_array ,di.enable_parse_rule ,di.is_custom ,di.is_valid ,di.create_time ,di.create_by ,di.update_time ,di.update_by, di.rule_type_id
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.dc.domain.DataItem"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        dc_data_item di
        <where>
            di.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 根据数据项名称查询 -->
    <select id="findByName" resultType="com.bitnei.cloud.dc.domain.DataItem"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        dc_data_item di
        <where>
            di.name=#{name}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="ruleTypeId != null">
                and di.rule_type_id = #{ruleTypeId}
            </if>
            <if test="id != null">
                and di.id != #{id}
            </if>
        </where>
    </select>

    <!-- 根据数据项编号查询 -->
    <select id="findBySeqNoCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(di.id)
        from
        dc_data_item di
        <where>
            di.seq_no=#{seqNo}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="ruleTypeId != null">
                and di.rule_type_id = #{ruleTypeId}
            </if>
            <if test="id != null">
                and di.id != #{id}
            </if>
        </where>
    </select>

    <!-- 根据数据项StartPos查询 -->
    <select id="findByStartPosCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(di.id)
        from
        dc_data_item di
        <where>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="byteStartPos != null">
                and di.byte_start_pos = #{byteStartPos}
            </if>
            <if test="bitStartPos != null">
                and di.bit_start_pos = #{bitStartPos}
            </if>
            <if test="itemGroupId != null">
                and di.item_group_id = #{itemGroupId}
            </if>
            <if test="id != null">
                and di.id != #{id}
            </if>
        </where>
    </select>


    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        dc_data_item (id,name,seq_no,item_group_id,item_type,byte_start_pos,bit_start_pos,length,high_low_flg,factor,offset,unit,dot,order_num,note,upper_limit,lower_limit,data_type,isnum,is_show,is_monitor,is_array,enable_parse_rule,is_custom,is_valid,create_time,create_by,rule_type_id)
        values
        (#{id},#{name},#{seqNo},#{itemGroupId},#{itemType},#{byteStartPos},#{bitStartPos},#{length},#{highLowFlg},#{factor},#{offset},#{unit},#{dot},#{orderNum},#{note},#{upperLimit},#{lowerLimit},#{dataType},#{isnum},#{isShow},#{isMonitor},#{isArray},#{enableParseRule},#{isCustom},#{isValid},#{createTime},#{createBy},#{ruleTypeId})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update dc_data_item set
        id=id,name=#{name},seq_no=#{seqNo},item_group_id=#{itemGroupId},item_type=#{itemType},byte_start_pos=#{byteStartPos},bit_start_pos=#{bitStartPos},length=#{length},high_low_flg=#{highLowFlg},factor=#{factor},offset=#{offset},unit=#{unit},dot=#{dot},order_num=#{orderNum},note=#{note},upper_limit=#{upperLimit},lower_limit=#{lowerLimit},data_type=#{dataType},isnum=#{isnum},is_show=#{isShow},is_monitor=#{isMonitor},is_array=#{isArray},enable_parse_rule=#{enableParseRule},is_custom=#{isCustom},is_valid=#{isValid},update_time=#{updateTime},update_by=#{updateBy}, rule_type_id=#{ruleTypeId}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete"  parameterType="java.util.HashMap">
        delete from
        dc_data_item
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 根据数据项组Id删除数据项 -->
    <delete id="deleteByGroupId"  parameterType="java.util.List">
        delete from
        dc_data_item
        <where>
            item_group_id in
            <foreach collection="list" index="index" item="gid" open="(" separator="," close=")">
                #{gid}
            </foreach>
        </where>
    </delete>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        dc_data_item di
        left join dc_data_item_group dig on dig.id = di.item_group_id
        <where>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="name != null">
                and di.name like "%"#{name}"%"
            </if>
            <if test="seqNo != null">
                and di.seq_no = #{seqNo}
            </if>
            <if test="itemGroupId != null">
                and di.item_group_id = #{itemGroupId}
            </if>
            <if test="itemGroupName != null">
                and dig.name like "%"#{itemGroupName}"%"
            </if>
            <if test="ruleTypeId != null">
                and di.rule_type_id = #{ruleTypeId}
            </if>
            <if test="byteStartPos != null">
                and di.byte_start_pos = #{byteStartPos}
            </if>
            <if test="bitStartPos != null">
                and di.bit_start_pos = #{bitStartPos}
            </if>
        </where>
        order by di.seq_no
    </select>

    <!-- 根据协议ID查询数据项 -->
    <select id="findListByRuleId" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        di.id, di.name, di.seq_no
        FROM dc_data_item di
        inner join dc_rule_item_lk rilk on di.id = rilk.item_id
        WHERE rilk.rule_id = #{ruleId}
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
    </select>


    <!-- 根据协议ID分页查询 -->
    <select id="pagerModelByRuleId" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        FROM dc_data_item di
        inner join dc_rule_item_lk rilk on di.id = rilk.item_id
        <where>
            rilk.rule_id = #{ruleId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="name != null">
                and di.name like "%"#{name}"%"
            </if>
            <if test="itemGroupId != null">
                and di.item_group_id like "%"#{itemGroupId}"%"
            </if>
        </where>
    </select>

    <!-- 根据转发平台ID查询数据项 -->
    <select id="findListByPlatformId" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        di.id, di.name
        FROM dc_data_item di
        inner join dc_platform_data_lk pdlk on di.id = pdlk.data_item_id
        WHERE pdlk.platform_id = #{platformId}
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
    </select>


    <!-- 根据转发平台ID分页查询 -->
    <select id="pagerModelByPlatformId" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        FROM dc_data_item di
        inner join dc_platform_data_lk pdlk on di.id = pdlk.data_item_id
        <where>
            pdlk.platform_id = #{platformId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="name != null">
                and di.name like "%"#{name}"%"
            </if>
            <if test="itemGroupId != null">
                and di.item_group_id like "%"#{itemGroupId}"%"
            </if>
        </where>
    </select>

    <!-- 查询树形列表 -->
    <select id="findTreeList" resultMap="tailResults" parameterType="java.util.HashMap">
        select dig.id, dig.`name` as name, dig.parent_id, dig.path
        from dc_data_item_group dig
        where dig.id = '0'
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
        union all
        select distinct dd.item_group_id as id, dig.`name` as name, dig.parent_id as parent_id, dig.path
        from dc_data_item dd
        left join dc_data_item_group dig on dig.id = dd.item_group_id
        <where>
            dig.id = #{itemGroupId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        union all
        select dd.id as id, dd.name as name, dd.item_group_id as parent_id, concat(dig.path, dd.id, '/') as path
        from dc_data_item dd
        left join dc_data_item_group dig on dig.id = dd.item_group_id
        <where>
            dd.item_group_id = #{itemGroupId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 根据协议类型ID查询树形列表 -->
    <select id="findTreeListByRuleType" resultMap="tailResults" parameterType="java.util.HashMap">
        select dig.id, dig.`name` as name, dig.parent_id, dig.path, 'false' as isItem
        from dc_data_item_group dig
        where dig.id = '0'
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
        union all
        select dig.id as id, dig.`name` as name, dig.parent_id as parent_id, dig.path, 'false' as isItem
        from dc_data_item_group dig
        <where>
            dig.rule_type_id = #{ruleTypeId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        union all
        select dd.id, dd.`name`, dd.item_group_id as parent_id, concat(dig.path, dd.id, '/') as path, 'true' as isItem
        from dc_data_item dd
        left join dc_data_item_group dig on dig.id = dd.item_group_id
        <where>
            dig.rule_type_id = #{ruleTypeId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 根据通讯协议ID查询树形列表 -->
    <select id="findTreeListByRule" resultMap="tailResults" parameterType="java.util.HashMap">
        select dig.id, dig.`name` as name, dig.parent_id, dig.path
        from dc_data_item_group dig
        where dig.id = '0'
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
        union all
        select ig.id as id, ig.`name` as name, ig.parent_id, ig.path
        from dc_data_item_group ig
        where ig.id in (select distinct gp.parent_id
        from dc_rule_item_lk rilk
        inner join dc_data_item dd on dd.id = rilk.item_id
        left join dc_data_item_group gp on gp.id = dd.item_group_id
        <where>
            rilk.rule_id = #{ruleId}
            and ig.id != '0'
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        )
        union all
        select distinct dig.id as id, dig.`name` as name, dig.parent_id, dig.path
        from dc_rule_item_lk rilk
        inner join dc_data_item dd on dd.id = rilk.item_id
        left join dc_data_item_group dig on dig.id = dd.item_group_id
        <where>
            rilk.rule_id = #{ruleId}
            and dig.id != '0'
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        union all
        select dd.id, dd.name, dd.item_group_id as parent_id, concat(dig.path, dd.id, '/') as path
        from dc_data_item dd
        inner join dc_rule_item_lk rilk on dd.id = rilk.item_id
        left join dc_data_item_group dig on dig.id = dd.item_group_id
        <where>
            rilk.rule_id = #{ruleId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 根据协议ID查询数据项 -->
    <select id="getByIds" resultMap="tailResults" parameterType="java.util.List">
        select
        di.id,
        di.name ,di.seq_no ,di.item_type ,di.byte_start_pos ,di.bit_start_pos ,di.length ,di.high_low_flg ,di.factor ,di.offset ,di.unit ,di.dot ,di.order_num ,di.note ,di.upper_limit ,di.lower_limit ,di.data_type ,di.isnum ,di.is_show ,di.is_monitor ,di.is_array ,di.enable_parse_rule ,di.is_custom ,di.is_valid
        FROM dc_data_item di
        where di.id in
        <foreach collection="itemIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
    </select>

    <!-- 根据协议seqNo查询数据项 -->
    <select id="getBySeqNos" resultMap="tailResults" parameterType="java.util.List">
        select
        di.id,
        di.name ,di.seq_no ,di.item_type ,di.byte_start_pos ,di.bit_start_pos ,di.length ,di.high_low_flg ,di.factor ,di.offset ,di.unit ,di.dot ,di.order_num ,di.note ,di.upper_limit ,di.lower_limit ,di.data_type ,di.isnum ,di.is_show ,di.is_monitor ,di.is_array ,di.enable_parse_rule ,di.is_custom ,di.is_valid
        FROM dc_data_item di
        where di.seq_no in
        <foreach collection="itemIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and di.rule_type_id=#{ruleTypeId}
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
    </select>
    <!-- 通过协议类型编码 -->
    <select id="findCustomizeByRuleTypeCode" resultType="com.bitnei.cloud.dc.domain.DataItem">
      select d.id as id, d.seq_no as seq_no, IFNULL(d.`offset`, 0) as `offset`, d.factor as factor, d.dot as `dot`
      from dc_data_item d
      inner join dc_rule_type drt on drt.id = d.rule_type_id
      where d.is_custom=1 and drt.code=#{value}
    </select>

    <!-- 根据检测规则ID获取分页数据项列表 -->
    <select id="pagerModelByCheckRuleId" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        FROM dc_data_item di
        inner join veh_data_check_rule_item dcri on di.id = dcri.data_item_id
        <where>
            dcri.check_rule_id = #{checkRuleId}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="name != null">
                and di.name like "%"#{name}"%"
            </if>
            <if test="itemGroupId != null">
                and di.item_group_id like "%"#{itemGroupId}"%"
            </if>
        </where>
    </select>
</mapper>
