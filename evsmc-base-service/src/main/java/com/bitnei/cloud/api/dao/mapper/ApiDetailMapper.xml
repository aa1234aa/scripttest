<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.api.dao.ApiDetailMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.api.domain.ApiDetail" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    det.id  ,det.name ,det.application_code ,det.url ,det.note ,det.version ,det.create_time ,det.create_by ,det.update_time ,det.update_by
    </sql>
    <sql id="moreColumns">
    det.id  ,det.name ,det.application_code ,det.url ,det.note ,det.version ,det.create_time ,det.create_by ,det.update_time ,det.update_by
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.api.domain.ApiDetail" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        api_api_detail det
        <where>
            det.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <select id="getByApplicationCodeAndUrl" resultType="com.bitnei.cloud.api.domain.ApiDetail" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        api_api_detail det
        <where>
            det.application_code=#{applicationCode} and
            det.url = #{url}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <select id="getAllByApplicationCode" resultType="com.bitnei.cloud.api.domain.ApiDetail"
            parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        api_api_detail det
        <where>
            1=1
            <if test="applicationCode != null and applicationCode!= ''">
                and det.application_code = #{applicationCode}
            </if>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        api_api_detail (id,name,application_code,url,note,version,create_time,create_by)
        values
        (#{id},#{name},#{applicationCode},#{url},#{note},#{version},#{createTime},#{createBy})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update api_api_detail set
        id=id,name=#{name},application_code=#{applicationCode},url=#{url},note=#{note},version=#{version},update_time=#{updateTime},update_by=#{updateBy}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete" parameterType="java.util.HashMap">
        delete from
        api_api_detail
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        api_api_detail det
        <where>
            1=1
            <if test="applicationCode != null and applicationCode!= ''">
                and det.application_code = #{applicationCode}
            </if>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
        order by create_time desc

    </select>

    <select id="getByIds" resultMap="tailResults" parameterType="java.util.List">
        select
        <include refid="moreColumns"/>
        from
        api_api_detail det where det.id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by det.create_time desc
    </select>

    <select id="getApiIdByUrl" parameterType="String" resultType="String">
        select id from api_api_detail where url like CONCAT('%',#{url},'%')
    </select>

</mapper>
