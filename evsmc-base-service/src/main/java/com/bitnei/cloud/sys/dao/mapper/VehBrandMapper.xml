<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.sys.dao.VehBrandMapper">

    <resultMap id="tailResults" type="com.bitnei.cloud.sys.domain.VehBrand" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    brand.id  ,brand.name ,englist_name ,brand.code ,brand.create_time ,brand.brand_img_id ,brand.note ,brand.create_by ,brand.update_time ,brand.update_by
    </sql>
    <sql id="moreColumns">
    brand.id  ,brand.name ,englist_name ,brand.code ,brand.create_time ,brand.brand_img_id ,brand.note ,brand.create_by ,brand.update_time ,brand.update_by
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.sys.domain.VehBrand"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        sys_veh_brand brand
        <where>
            brand.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

     <!-- 根据名称查询 -->
    <select id="findByName" resultType="com.bitnei.cloud.sys.domain.VehBrand"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        sys_veh_brand brand
        <where>
            brand.name=#{name}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

    <!-- 根据英文品牌查询 -->
    <select id="findByEnglistName" resultType="com.bitnei.cloud.sys.domain.VehBrand"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        sys_veh_brand brand
        <where>
            brand.englist_name=#{englistName}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>

     <!-- 根据编码查询 -->
    <select id="findByCode" resultType="com.bitnei.cloud.sys.domain.VehBrand"  parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        sys_veh_brand brand
        <where>
            brand.code=#{code}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>    

    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        sys_veh_brand (id,name,englist_name,code,create_time,brand_img_id,note,create_by)
        values
        (#{id},#{name},#{englistName},#{code},#{createTime},#{brandImgId},#{note},#{createBy})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update sys_veh_brand set
        name=#{name},englist_name=#{englistName},code=#{code},brand_img_id=#{brandImgId},note=#{note},update_time=#{updateTime},update_by=#{updateBy}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete"  parameterType="java.util.HashMap">
        delete from
        sys_veh_brand
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        sys_veh_brand brand
        <where>
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
            <if test="name != null">
              and brand.name like CONCAT('%',#{name},'%')
            </if>
        </where>
        order by brand.create_time desc
    </select>

</mapper>
