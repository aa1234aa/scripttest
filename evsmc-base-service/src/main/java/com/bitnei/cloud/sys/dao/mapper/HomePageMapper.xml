<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitnei.cloud.sys.mapper.HomePageMapper">
    <resultMap id="tailResults" type="com.bitnei.cloud.sys.domain.HomePage" autoMapping="true">
        <association property="tails" javaType="java.util.HashMap">
        </association>
    </resultMap>

    <!-- 权限sql -->
    <sql id="authSQL">
        and ${authSQL}
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="baseColumns">
    home_p.id  ,home_p.create_time ,home_p.update_time
    </sql>
    <sql id="moreColumns">
    home_p.id  ,home_p.create_time ,home_p.update_time
    </sql>

    <!-- 根据id查询 -->
    <select id="findById" resultType="com.bitnei.cloud.sys.domain.HomePage" parameterType="java.util.HashMap">
        select
        <include refid="moreColumns"/>
        from
        sys_hisdata_query home_p
        <where>
            home_p.id=#{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </select>


    <!-- 增加 -->
    <insert id="insert" parameterType="java.util.HashMap">
        insert into
        sys_hisdata_query (id,create_time)
        values
        (#{id},#{createTime})
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="java.util.HashMap">
        update sys_hisdata_query set
        id=id,update_time=#{updateTime}
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>

    </update>

    <!-- 删除 -->
    <delete id="delete" parameterType="java.util.HashMap">
        delete from
        sys_hisdata_query
        <where>
            id = #{id}
            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>
        </where>
    </delete>

    <!-- 分页查询 -->
    <select id="pagerModel" resultMap="tailResults" parameterType="java.util.HashMap">

        SELECT
        count(distinct v.id) AS total,
        sum(CASE WHEN vs.onlined=1 THEN 1 else 0 end) onlined,
        sum(CASE WHEN vs.onlined=1 and vs.update_time is not null and vs.update_time <![CDATA[>=]]>#{start_time} and vs.update_time
         <![CDATA[<=]]>#{end_time} THEN 1 else 0  end) active ,
        sum(CASE WHEN vs.onlined=1  and vs.online_status=1 THEN 1 else 0  end) vehOnline,
        sum(CASE WHEN vs.lng is null or vs.lat is null or vs.lng=0 or vs.lat=0 THEN 1 else 0 end) zeroGPS,
        sum(CASE WHEN vs.onlined=0 or vs.onlined is null or vs.first_reg_time is null THEN 1 else 0 end) notOnlined

        from sys_vehicle v
         join sys_vehicle_real_status vs on v.id=vs.vehicle_id
        where
            v.is_delete=0

            <if test="authSQL != null">
                <include refid="authSQL"/>
            </if>



    </select>

    <!-- 故障车辆 -->
    <select id="VehFaultCount" resultMap="tailResults" parameterType="java.util.HashMap">

        SELECT
        count(distinct v.id) AS faultVehCount


        from sys_vehicle v
        left join fault_alarm_info fault on fault.vehicle_id=v.id
        where
        v.is_delete=0
        and fault.fault_status=1 and fault.proces_status=1
        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>



    </select>

    <select id="areaStat" resultType="java.util.Map" parameterType="java.util.HashMap">



        select substring_index(area.path,'/',3) path,
        (select a.name from sys_area a where a.id=substring(substring_index(area.path,'/',3),4)) name,
        sum(CASE WHEN vs.onlined=1 and vs.update_time is not null and vs.update_time <![CDATA[>=]]>#{start_time} and vs.update_time
        <![CDATA[<=]]>#{end_time} THEN 1 else 0  end) active,

        count(distinct v.id) total
        from sys_vehicle v
        join sys_vehicle_real_status vs on v.id=vs.vehicle_id
        left join sys_area area on area.id=vs.current_gps_area_id
        where
        v.is_delete=0
        and vs.onlined=1
        and (path like '/0/%/%' )

        <if test="authSQL != null">
            <include refid="authSQL"/>
        </if>
        group by substring_index(area.path,'/',3)
        order by total desc
        limit #{offset},#{limit};
    </select>


</mapper>
